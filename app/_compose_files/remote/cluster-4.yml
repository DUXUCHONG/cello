# This compose file will start 4 hyperledger peer nodes, and make a cluster
#  vp0: validating node as root
#  vp1: validating node as peer
#  vp2: validating node as peer
#  vp3: validating node as peer
# https://github.com/yeasy/docker-compose-files

version: '2'

services:
  # validating node as the root
  # vp0 will also be used for client interactive operations
  # If you want to run fabric command on the host, then map 30303:30303 to host
  # port, or use like `CORE_PEER_ADDRESS=172.17.0.2:30303` to specify peer addr.
  vp0:
    extends:
      file: peer-pbft.yml
      service: vp
    hostname: vp0
    container_name: ${COMPOSE_PROJECT_NAME}_vp0
    environment:
      - CORE_PEER_ID=vp0
    ports:
      - "${API_PORT}:5000"

  # validating node
  vp1:
    extends:
      file: peer-pbft.yml
      service: vp
    hostname: vp1
    container_name: ${COMPOSE_PROJECT_NAME}_vp1
    environment:
      - CORE_PEER_ID=vp1
      - CORE_PEER_DISCOVERY_ROOTNODE=${COMPOSE_PROJECT_NAME}_vp0:30303
    #links:
    #  - vp0

  # validating node
  vp2:
    extends:
      file: peer-pbft.yml
      service: vp
    hostname: vp2
    container_name: ${COMPOSE_PROJECT_NAME}_vp2
    environment:
      - CORE_PEER_ID=vp2
      - CORE_PEER_DISCOVERY_ROOTNODE=${COMPOSE_PROJECT_NAME}_vp0:30303


  # validating node
  vp3:
    extends:
      file: peer-pbft.yml
      service: vp
    hostname: vp3
    container_name: ${COMPOSE_PROJECT_NAME}_vp3
    environment:
      - CORE_PEER_ID=vp3
      - CORE_PEER_DISCOVERY_ROOTNODE=${COMPOSE_PROJECT_NAME}_vp0:30303

networks:
  default:
    external:
      name: ${CLUSTER_NETWORK}